// ################################################################ 
//  This file has been generated by the hashspace compiler          
//  Direct MODIFICATIONS WILL BE LOST when the file is recompiled!  
// ################################################################ 

var hsp=require("hsp/rt");
var klass=require("hsp/klass"), $set=require("hsp/$set");


var elapsedTime = require("hsp/rt").template(["timer"], function(n){
  return [n.$text({e1:[1,2,"timer","secondsElapsed"]},["Seconds Elapsed: ",1])];
});


// klass is a little utility to create a JS object constructor 
// from a simple JSON structure - main goals are to
// to simplify prototypal inheritance and ease code reading
var Timer=klass({
    $constructor:function() {
        this.secondsElapsed=0;
        this._iid=setInterval(this.tick.bind(this),1000);
    },
    $dispose:function() {
    	clearInterval(this._iid);
    },
    tick:function() {
        $set(this,"secondsElapsed",this.secondsElapsed+1);
    }
});

// display the template in the #output div
elapsedTime(new Timer()).render("output");

